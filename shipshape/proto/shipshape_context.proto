syntax = "proto2";

package shipshape_proto;

option java_outer_classname = "ShipshapeContextProto";
option java_package = "com.google.shipshape.proto";

import "shipshape/proto/source_context.proto";
//import "third_party/kythe/proto/analysis.proto";

// Root object that provides access to information
// about the environment the analysis is running in.
message ShipshapeContext {
  enum Environment {
    CODE_REVIEW = 1;
    LOCAL_CLIENT = 2;
    BATCH = 3;
    IDE = 4;
    POST_SUBMIT = 5;
  }

  // Where is the analysis running, used to make decisions to tweak
  // the analysis.
  optional Environment environment = 1;
  // The source_context describes the source code repository analyzed.
  optional source.v1.SourceContext source_context = 2;
  // Current list of file patterns to analyze, from repo root
  repeated string file_path = 3;
  // Path to the repo_root locally. All files can be read from in this
  // directory. If no file_paths are specified, will analyze all files
  // available from the root.
  optional string repo_root = 4;
  // Set only when analysis is run in the context of a changelist.
  // e.g.  a Code Review
  optional ChangelistDetails changelist_details = 5;
  // TODO(supertri): Do we need dependency details, or build details?
  optional CompilationDetails compilation_details = 8;
  // TODO(supertri): Do we need locations of services?
}

// Provides data describing a changelist, including code review related
// information.
message ChangelistDetails {
  // Commit or changelist id.
  optional string changelist = 1;
  optional string changelist_author = 2;
  repeated string changelist_reviewer = 3;
  repeated string changelist_cc = 4;
  optional string changelist_description = 5;
  // List of files that are deleted in the changelist.
  repeated string deleted_file_path = 6;
  optional string client_name = 7;
}

// Provides information about a specific compilation
message CompilationDetails {
  // Set when running compiler based analysis; compilation_details describes
  // a single invocation of a compiler.
  //optional kythe.proto.CompilationUnit compilation_unit = 1;
  // The local path to a compilation description file (.kindex)
  // that this compilation unit came from.
  optional string compilation_description_path = 2;
}

// Indicates what stage of Shipshape to plug in to or Shipshape is running in.
enum Stage {
  // optionally set: changelist_details.
  PRE_BUILD = 1;

  // guaranteed to be set: compilation_unit.
  // optionally set: changelist_details.
  POST_BUILD = 2;
}
