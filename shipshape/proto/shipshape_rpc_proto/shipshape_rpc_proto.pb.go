// Code generated by protoc-gen-go.
// source: shipshape/proto/shipshape_rpc.proto
// DO NOT EDIT!

/*
Package shipshape_rpc_proto_go_src is a generated protocol buffer package.

It is generated from these files:
	shipshape/proto/shipshape_rpc.proto

It has these top-level messages:
	GetCategoryRequest
	GetCategoryResponse
	GetStageRequest
	GetStageResponse
	AnalyzeRequest
	AnalysisFailure
	AnalyzeResponse
	ShipshapeRequest
	ShipshapeResponse
*/
package shipshape_rpc_proto_go_src

import proto "github.com/golang/protobuf/proto"
import math "math"
import shipshape_proto1 "github.com/google/shipshape/shipshape/proto/note_proto"
import shipshape_proto2 "github.com/google/shipshape/shipshape/proto/shipshape_context_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GetCategoryRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetCategoryRequest) Reset()         { *m = GetCategoryRequest{} }
func (m *GetCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetCategoryRequest) ProtoMessage()    {}

// Tells the environment what analyses are available at this
// service.
type GetCategoryResponse struct {
	// List of analysis categories available.
	// For individual analyzers, this list should have one element.
	// Dispatching analyzers (implementation details for Shipshape) can
	// return multiple categories.
	// Should match requirements in the category field for Notes.
	Category         []string `protobuf:"bytes,1,rep,name=category" json:"category,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetCategoryResponse) Reset()         { *m = GetCategoryResponse{} }
func (m *GetCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetCategoryResponse) ProtoMessage()    {}

func (m *GetCategoryResponse) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

type GetStageRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetStageRequest) Reset()         { *m = GetStageRequest{} }
func (m *GetStageRequest) String() string { return proto.CompactTextString(m) }
func (*GetStageRequest) ProtoMessage()    {}

// Tells the environment what stage the analyzer can run in.
type GetStageResponse struct {
	Stage            *shipshape_proto2.Stage `protobuf:"varint,1,opt,name=stage,enum=shipshape_proto.Stage" json:"stage,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetStageResponse) Reset()         { *m = GetStageResponse{} }
func (m *GetStageResponse) String() string { return proto.CompactTextString(m) }
func (*GetStageResponse) ProtoMessage()    {}

func (m *GetStageResponse) GetStage() shipshape_proto2.Stage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return shipshape_proto2.Stage_PRE_BUILD
}

// Provides information to an analyzer to perform its analysis.
type AnalyzeRequest struct {
	ShipshapeContext *shipshape_proto2.ShipshapeContext `protobuf:"bytes,1,opt,name=shipshape_context" json:"shipshape_context,omitempty"`
	Category         []string                           `protobuf:"bytes,2,rep,name=category" json:"category,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *AnalyzeRequest) Reset()         { *m = AnalyzeRequest{} }
func (m *AnalyzeRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyzeRequest) ProtoMessage()    {}

func (m *AnalyzeRequest) GetShipshapeContext() *shipshape_proto2.ShipshapeContext {
	if m != nil {
		return m.ShipshapeContext
	}
	return nil
}

func (m *AnalyzeRequest) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

type AnalysisFailure struct {
	Category         *string `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	FailureMessage   *string `protobuf:"bytes,2,opt,name=failure_message" json:"failure_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AnalysisFailure) Reset()         { *m = AnalysisFailure{} }
func (m *AnalysisFailure) String() string { return proto.CompactTextString(m) }
func (*AnalysisFailure) ProtoMessage()    {}

func (m *AnalysisFailure) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *AnalysisFailure) GetFailureMessage() string {
	if m != nil && m.FailureMessage != nil {
		return *m.FailureMessage
	}
	return ""
}

// Describes the results of an analysis, whether complete or failed.
// If an analysis run completes successfully but produces no notes,
// just return an empty list.
// If the analyzer fails, return a failure_message. Analyzers may also
// return partial results (only a subset of the notes) in this case.
type AnalyzeResponse struct {
	Note             []*shipshape_proto1.Note `protobuf:"bytes,1,rep,name=note" json:"note,omitempty"`
	Failure          []*AnalysisFailure       `protobuf:"bytes,2,rep,name=failure" json:"failure,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *AnalyzeResponse) Reset()         { *m = AnalyzeResponse{} }
func (m *AnalyzeResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResponse) ProtoMessage()    {}

func (m *AnalyzeResponse) GetNote() []*shipshape_proto1.Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *AnalyzeResponse) GetFailure() []*AnalysisFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type ShipshapeRequest struct {
	// The ShipshapeContext to use for this run
	ShipshapeContext *shipshape_proto2.ShipshapeContext `protobuf:"bytes,1,opt,name=shipshape_context" json:"shipshape_context,omitempty"`
	// Explicitly triggered categories. If empty will run what is in config files.
	// Will only run the triggered categories.
	TriggeredCategory []string `protobuf:"bytes,2,rep,name=triggered_category" json:"triggered_category,omitempty"`
	// The event we are running for
	Event *string `protobuf:"bytes,3,opt,name=event" json:"event,omitempty"`
	// Which stage to run
	Stage            *shipshape_proto2.Stage `protobuf:"varint,4,opt,name=stage,enum=shipshape_proto.Stage" json:"stage,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ShipshapeRequest) Reset()         { *m = ShipshapeRequest{} }
func (m *ShipshapeRequest) String() string { return proto.CompactTextString(m) }
func (*ShipshapeRequest) ProtoMessage()    {}

func (m *ShipshapeRequest) GetShipshapeContext() *shipshape_proto2.ShipshapeContext {
	if m != nil {
		return m.ShipshapeContext
	}
	return nil
}

func (m *ShipshapeRequest) GetTriggeredCategory() []string {
	if m != nil {
		return m.TriggeredCategory
	}
	return nil
}

func (m *ShipshapeRequest) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

func (m *ShipshapeRequest) GetStage() shipshape_proto2.Stage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return shipshape_proto2.Stage_PRE_BUILD
}

type ShipshapeResponse struct {
	AnalyzeResponse  []*AnalyzeResponse `protobuf:"bytes,1,rep,name=analyze_response" json:"analyze_response,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ShipshapeResponse) Reset()         { *m = ShipshapeResponse{} }
func (m *ShipshapeResponse) String() string { return proto.CompactTextString(m) }
func (*ShipshapeResponse) ProtoMessage()    {}

func (m *ShipshapeResponse) GetAnalyzeResponse() []*AnalyzeResponse {
	if m != nil {
		return m.AnalyzeResponse
	}
	return nil
}

func init() {
}
